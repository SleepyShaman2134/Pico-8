pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
 x = 3
 y = 2
 t = 0 --tick
 f = 0 --frame
 s = 6 --step
 t_slow = 0
 f_slow = 0 
 s_slow = 10
 t_enemy = 0
 f_enemy = 0
 s_enemy = 20
 hero = 020
 initiate_spr_animations()
 init_counters()
 printh("initiated")
 scanner = 0
 x_scanner = 0
 y_scanner = 0
 
    
end

function _draw()
	cls()
	map()
	--print(map_tile_i)
	spr(hero, x*8, y*8)
	check_doors(level)
	animate_map()
	--print(levels_passed)
	--print("close the door")
end

--we scan the tiles based on 
--their drawing id
function _update()
	check_dead()
	t = (t+1)%s
	t_slow = (t_slow + 1)%s_slow
	t_enemy = (t_enemy + 1)%s_enemy
	scan_map()
	animate_frame()
	move()
	
 camera(level_index_j * 8, level_index_i* 8)
 printh("updating")
end


-->8
function move()
	local speed = 1
	if btnp(⬇️) and check_block(x,y+1) then
		y += speed
	elseif  btnp(⬆️) and check_block(x, y-1) then
		y -= speed
	elseif  btnp(⬅️) and check_block(x-1, y) then
		x -= speed
	elseif  btnp(➡️) and check_block(x+1, y) then
		x += speed
	end
end

function scan_map()
	for i = 0 + level_index_j, 15 + level_index_j do
  for j = 0 + level_index_i, 15 + level_index_i do
    --map_tile = mget(i, j)
    levers = {{mget(13, 7)}}
    doors = {{mget(12, 1)}}
    local tile = mget(i, j)
    if tile == 25 and t_enemy == 0 then
    	local tile_check = mget(i - 1, j)
    	if tile_check != 12 and tile_check != 11 then
    		mset(i-1, j, 25)
    		mset(i, j, 8)
    		if i-1 == x and j == y then
		   		me_ded = 0
		   	end
    	else
    		mset(i, j, 40)
    	end
    end
   	if tile == 41 and t_enemy == 0 then
   		local tile_check = mget(i+1, j)
   		if tile_check != 12 and  tile_check != 11 then
   			mset(i+1, j, 41)
    		mset(i, j, 8)
    		--if i+1 == x and j == y then
		   	--	me_ded = 0
		   	--end
   		else
   			mset(i, j, 25)
   		end
   	end
		end
	end
end


function check_dead()
	if me_ded == 0 then
		if level == 1 then
		 x = 3
		 y = 2
		end
		if level == 5 then
			x = 71
			y = 13
		end
		me_ded = 1
	end
end

--function that will open door when level is used
function check_doors(level)
	local string
	local counter = 0 
	if level == 1 then
		if levers[level][1] == 004 then
			mset(12, 1, 006)
		elseif levers[level][1] == 003 then
			mset(12, 1, 005)
		end
	end

	if level == 2 then
		if levels_passed == 0 then
			mset(30, 5, 006)
			levels_passed += 1
		end
		if levels_passed == 2 then
			mset(17, 5, 006)
			levels_passed += 1
		end
		if levels_passed == 4 then
		 mset(23, 3, 006)
		end
	end
end

function check_block(x_pos, y_pos)
		local tile = mget(x_pos, y_pos)
		
		if tile == 003 then
			mset(x_pos, y_pos, 004)
			
		elseif tile == 004 then
			mset(x_pos, y_pos, 003)
		end
		
		if tile == 022 or tile == 023 or tile == 26 or tile == 27 then
			levels_passed += 1
			mset(x_pos, y_pos, 008)
		end
		
		if tile == 24 or tile == 25 or tile == 40 or tile == 41 then
			me_ded = 0
		end
		
		if tile == 9 or tile == 10 then
			if level == 1 then
				x = 3
				y = 2
				return false
			elseif level == 2 then
				x = 23
				y = 13
				return false
			elseif level == 3 then
				x = 34
				y = 3
				return false
			elseif level == 4 then
				x = 50
				y = 4
				return false
			end
		end
		
		if tile == 006 or tile == 007 then
			if level == 1 then
			level_index_j +=16
			x = 23
			y = 13
			level = 2
			end
			
			if level == 2 then
				if x_pos == 30 and y_pos == 5 then
					level_index_j += 16
					x = 34
					y = 003
					level = 3
				end
				if x_pos == 23 and y_pos == 14 then
					level_index_j -= 16
					x = 12
					y = 2
					level = 1
				end
				if x_pos == 17 and y_pos == 5 then
					level_index_j += 48
					x = 71
					y = 13
					level = 5
				end
				if x_pos == 23 and y_pos == 3 then
					level_index_j += 16
					level_index_i += 16
				end
			end
			
			if level == 3 then
				if x_pos == 33 and y_pos == 3 then
					level_index_j -= 16
					x = 29
					y = 5
					level = 2
				end
				if x_pos == 46 and y_pos == 3 then
					level_index_j += 16
					x = 50
					y = 4
					level = 4
				end
			end
			
			if level == 4 then
				if x_pos == 49 and y_pos == 4 then
					level_index_j -= 16
					x = 45
					y = 3
					level = 3
				end
			end
			
			if x_pos == 71 and y_pos == 14 then
				level_index_j -= 48
				x = 18
				y = 5
				level = 2
			end
		end
		
		if fget(tile, 7) then
			return false
		end
		return true
end

function door_location(x_pos, y_pos, tile)
	if x_pos == 30 and y_pos == 5 and (tile == 006 or tile == 007) then
		return true
	end
	return false
end
-->8
function animate_frame()
	animate_frame_hero()
 animate_frame_sand()
 animate_frame_door_opened()
 animate_frame_door_closed()
	animate_frame_spike()
	animate_frame_green_diamond()
	animate__frame_worm_enemy()
end

function animate_frame_hero()
	
end

function animate__frame_worm_enemy()
	if t_enemy == 0 then
	 f_enemy_right = (f_enemy_right + 1) % #spr_enemy_right
	 f_enemy_left = (f_enemy_left + 1) % #spr_enemy_left
	end
end

function animate_frame_green_diamond()
	if t_slow == 0 then
		f_green_diamond = (f_green_diamond + 1) % #spr_green_diamond
		f_red_diamond = (f_red_diamond +1) % #spr_red_diamond
	end
end

function animate_frame_spike()
	if t_slow == 0 then
		f_spikes = (f_spikes+1) % #spr_spikes
	end
end

function animate_frame_door_opened()
	if t_slow == 0 then
		f_door_open = (f_door_open+1) % #spr_ddor_opened
	end
end

function animate_frame_door_closed()
	if t_slow == 0 then
		f_door_close = (f_door_close+1) % #spr_door_closed
	end
end

function animate_frame_sand()
	if t == 0 then
		f_sand = (f_sand+1) % #spr_sands
	end
end

function animate_map()
	for i=0 + level_index_j, 15 + level_index_j do
		for j = 0 + level_index_i, 15 + level_index_i do
			local tile = mget(i, j)
			if tile  == 1 or tile == 2 then
				mset(i, j, spr_sands[f_sand+1])
			end
			if tile == 005 then
				mset(i, j, spr_door_closed[f_door_close + 1])
			end
			if tile == 006 or tile == 007 then
				mset(i, j, spr_ddor_opened[f_door_open + 1])
			end
			if tile == 009 or tile == 010 then
				mset(i, j, spr_spikes[f_spikes + 1])
			end
			if tile == 022 or tile == 023 then
				mset(i, j, spr_green_diamond[f_green_diamond + 1])
			end
			if tile == 026 or tile == 027 then
				mset(i, j, spr_red_diamond[f_red_diamond + 1])
			end
			if tile == 025 or tile == 024 then
				mset(i, j, spr_enemy_left[f_enemy_left + 1])
			end
			if tile == 040 or tile == 041 then
				mset(i, j, spr_enemy_right[f_enemy_right + 1])
			end
		end
	end
end


-->8
function initiate_spr_animations()
	spr_hero_sideway = {019, 020}
	spr_hero_front = {020}
	spr_hero_back = {021}
	spr_lever = {003}
	spr_door_closed = {005}
	spr_ddor_opened = {006, 007}
	spr_spikes = {009, 010}
	spr_sands = {1, 2}
	spr_enemy_left = {024, 025}
	spr_enemy_right = {040, 041}
	spr_enemy_idle = {025}
	spr_enemy_walk = {024}
	spr_mountain = {012}
	spr_green_diamond = {022, 023}
	spr_red_diamond = {026, 027}
end

function init_counters()
	map_index = 0
	map_tile_i = {}
	map_tile_j = {}
	map_tile = 0
--	map_tile[i] = {}
	level = 1
	level_index_i = 0
	level_index_j = 0
	f_sand = 0
	f_door_open = 0
	f_door_close = 0
	f_spikes = 0
	f_green_diamond = 0
	f_red_diamond = 0
	f_enemy_right = 0
	f_enemy_left = 0
	enemy_walk = false
	enemy_direction = -1
	levers = {{mget(13, 7)}}
	doors = {{mget(12, 1)}, {mget(23,14), mget(30, 5), mget(17, 5), mget(23, 3)}, {mget(33, 3), mget(46, 3)}, {mget(49, 4)}}
	levels_passed = 0
	me_ded = 1
end
__gfx__
00000000999999499999999499999999999999999999999999999999999999999999999999999999999999994004040499999999000000004444444477777777
00000000949999999949999999999999999999999900009999000099990000999999999996996999979979994040040499966999000000004444444477777777
00700700999949999999999999997799997799999004400990077009900660099999999996996969969969790040400499666699000000004444444477777777
00077000999999999499999499997999999799999044440990777709906666099999999996996969969969690400404099666699000000004444444477777777
00077000494999949999999999900999999009999044440990777709906666099999999999999969999999690404004096666669000000004444444477777777
00700700999994999999999999777799997777999044400990777709906666099999999999699699997997994004040096666669000000004444444477777777
00000000999994999949994999799799997997999044440990777709906666099999999999699699996996994040040496666669000000004444444477777777
00000000999499994999999977799777777997779044440990777709906666099999999999699699996996994040400466666666000000004444444477777777
9999999989966999999cc999999cc999999cc999999cc99999999999999999999999999999999999999999999999999900000000000000000000000000000000
9999999888966999999aa999999aa999999aa999999aa999999bb999999bb99999ee49999999ee49999889999998899900000000000000000000000000000000
99999888888869999922299992222999999229999992299999bb7b9999b7bb9999e449999999e449998878999987889900000000000000000000000000000000
9999888888888999922889999298899999988999999229999bbbb7b99b7bbbb99944449999994499988887899878888900000000000000000000000000000000
9999888888888999999889999998899999288999992289999b7bbbb99bbbb7b99994449999994499987888899888878900000000000000000000000000000000
99988888888888999991199999911999999119999991199999b7bb9999bb7b999999444999994499998788999988789900000000000000000000000000000000
999888888888889999911999999119999991199999911999999bb999999bb9999999944999944499999889999998899900000000000000000000000000000000
99944444444444999991199999911999999119999991199999999999999999999999944499444449999999999999999900000000000000000000000000000000
99940000044444990000000000000000000000000000000000000000000000009999999999999999000000000000000000000000000000000000000000000000
99940606044444990000000000000000000000000000000000000000000000009994ee9994ee9999000000000000000000000000000000000000000000000000
999406060444009900000000000000000000000000000000000000000000000099944e99944e9999000000000000000000000000000000000000000000000000
99940000044000990000000000000000000000000000000000000000000000009944449999449999000000000000000000000000000000000000000000000000
99944444444055990000000000000000000000000000000000000000000000009944499999449999000000000000000000000000000000000000000000000000
99944444444055990000000000000000000000000000000000000000000000009444999999449999000000000000000000000000000000000000000000000000
99944444444055990000000000000000000000000000000000000000000000009449999999444999000000000000000000000000000000000000000000000000
99944444444055990000000000000000000000000000000000000000000000004449999994444499000000000000000000000000000000000000000000000000
__gff__
0000008081808080000000808000000000800000000080800000808000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b101108080c01010101010c050c010b0b02020102010b0b0b0c01020102020b0b0c0c010c0c0c020c0c0c0c0c0c0c0b0b0c0c0c0c0c0c0c080808080808080b0b08080808080808080808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b202108080c01010101010c080c0c0b0b02010201020b0b0b0c0c010102010b0b0c0c0c0c0c0c0c0c0c0808080c0c0b0b0808080908090c0c0c0c0c0808080b0b08080808080808080808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c08080c0c0c0c0c0c0c08080c0b0b01020c0c0c0b050b080c0c0201020b0b06080808080808080808090808060b0b080808090808080908090c0c0c080b0b080c0c0c0c0c0c080808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b020c08080808080808080808080c0b0b0c0c0c080808080808080c0c0c0c0b0b0c0c0c0c0c0c0c0c0c0c0c0c0c0c0b0b0608080808090809080808160c0c0b0b0808080808190c0c0c0c08080c0c0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b020c0808080808080c080808080c0b0b05080808080808080808080808050b0b0c0c0c02020c0c0c010c0c0c020c0b0b080808090809080808090c0c0c080b0b080c0c080c080c190808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b020c0c0c0c0c0c080c0c0c0c0c0c0b0b0c0c0c0808080808080c0c0c080c0b0b02020202020c010c0c0c0c0c0c0c0b0b080808090809080c0c0c080808080b0b0c0c080c0c080c0c0c0c0c0c080c0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0202020202020c0808080808030c0b0b0c0c0c0c0c080808080c0c0c0c0c0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0808080808080b0b0808081908080c081908080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b02010c0c0c0c08080c0c0c0c0c0c0b000000000000000000000000000000000b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b080c0c080c0c0c0c0c0c0c0c0c080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b0102020c0c0c08080c0c010201010b00000000000000000000000000000000000000000000000000000000000000220b0808080c08080c190808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b020101020c0c08080c0c010202020b00000000000000000000000000000000000000000000000000000000000000220b0808080808080c0c0c080c0c0c0c0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b020202010c0c08080c0c020102010b00000000000000000000000000000000000000000000000000000000000000220b08080808081a0c080808080808190b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b020201020c0c08080c0c020202020b00000000000000000000000000000000000000000000000000000000000000220b0c0c0c0c0c0c0c0c0c0c0c0c0c080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b020102020c0c08080c0c020101010b00000000000000000000000000000000000000000000000000000000000000220b08080808080808080808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b010202020c0c06080c0c020202010b00000000000000000000000000000000000000000000000000000000000000220b08080808080806080808080808080b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d000000000000000000000000000000220b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0000000000000000000000000000001c1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b08080808080808080808080808080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b080f0f0f08080f08080f08080f080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b080f080808080808080f0f080f080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b080f0f0808080f08080f080f0f080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b080f080808080f08080f08080f080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b08080808080808080808080808080b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
